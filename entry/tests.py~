import datetime
from django.test import TestCase
from django.contrib.auth.models import User
from django.utils.timezone import utc
from entry.models import Post, Critique


class PostTestCase(TestCase):
    fixtures = ['entry_test_fixture.json',]

    def setUp(self):
        self.user = User.objects.get(pk=1)

    def test_unicode(self):
        expected = u"This is a title"
        p1 = Post(title=expected)
        actual = unicode(p1)
        self.assertEqual(expected, actual)

class CritiqueTestCase(TestCase):
    fixtures = ['entry_test_fixture.json',]

    def setUp(self):
        self.user = User.objects.get(pk=1)

    def test_unicode(self):
        expected = u"text"
        c1 = Critique(text=expected)
        actual = unicode(c1)
        self.assertEqual(expected, actual)


class FrontEndTestCase(TestCase):
    """test front end views"""
    fixtures = ['entry_test_fixture.json',]
    def setUp(self):
        self.now = datetime.datetime.utcnow().replace(tzinfo=utc)
        self.timedelta = datetime.timedelta(15)
        author = User.objects.get(pk=1)
        for count in range(1, 5):
            post = Post(title="Post %d Title",
                        text="foo",
                        author=author)
            post.save()

        def test_list_only_published(self):
            post = self.client.get('/')
            self.assertTrue("Posts" in resp.content)
            for count in range(1, 5):
                post = "Post %d Title"
                self.assertContains(post, title)
